#Описательная статистика

***

##01 Введение

Практические задания отсутствуют

***

##02 Непрерывные и дискретные переменные

Практические задания отсутствуют

***

##03 Гистограммы частот

Практические задания отсутствуют

***

##04 Гистограмма частот для непрерывной переменной

###Задача 1 / 2

	pur_time.hist( bins=[15, 30, 45, 60, 75, 90],  alpha=0.7)

###Задача 2 / 2

	pur_time.hist( bins=[15, 35, 55, 75, 90],  alpha=0.5)
	pur_time.hist( bins=[15, 45, 55, 90],  alpha=0.5)

***

##05 Гистограммы плотностей

Практические задания отсутствуют

***

##06 Характеристики положения

Практические задания отсутствуют

***

##07 Кто разбросал данные?

	import pandas as pd
	
	data = pd.Series([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10])
	# допишите ваш код здесь: найдите среднее значение в датасете
	mean_value =  data.mean()
	# допишите ваш код здесь: для каждого элемента датасета находим расстояние до среднего значения
	spacing_all =  data - mean_value
	# допишите ваш код здесь: считаем среднее расстояние
	spacing_all_mean = spacing_all.mean()
	
	print(spacing_all_mean)

***

##08 Дисперсия

Практические задания отсутствуют

***

##09 Стандартное отклонение

###Задача 1 / 5

	variance = np.var(data)
	print(variance)

###Задача 2 / 5

	variance_estimate = np.var(data, ddof=1)
	print(variance_estimate)

###Задача 3 / 5

	standard_dev = np.std(data, ddof=1)
	print(standard_dev)

###Задача 4 / 5

	adv_std = np.sqrt(adv_var)
	adv_time = (3+3*adv_std)
	print('Время показа сообщения',adv_time)

###Задача 5 / 5

	# посчитайте количество правильно ответивших в среднем
	quiz_mean = 6000*0.03 
	# посчитайте стандартное отклонение от общего числа участников
	quiz_std= 6000*0.004
	# посчитайте нижнюю границу интервала
	quiz_bottom_line= quiz_mean - 3*quiz_std
	# посчитайте верхнюю границу интервала
	quiz_top_line= quiz_mean + 3*quiz_std
	print(quiz_top_line)

***

##10 Скошенность наборов данных

Практические задания отсутствуют

***

##11 Заключение

Практические задания отсутствуют

***
