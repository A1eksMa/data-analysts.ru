#Взаимосвязь данных

***

##01 Введение

Практические задания отсутствуют

***

##02 Диаграмма рассеяния

>Постройте график по данным из `station_stat_full`

	station_stat_full.plot(x='count', y='time_spent', kind='scatter', grid=True)

***

##03 Корреляция

***

>По данным из таблицы `station_stat_full` посчитайте коэффициент корреляции Пирсона между числом заездов на АЗС и временем заправки

	print(station_stat_full['count'].corr(station_stat_full['time_spent']))

##04 Матрица диаграмм рассеяния

>Создайте переменную station_stat_multi, где для каждой АЗС будет 3 числа:
 1) среднее (не медиана) продолжительности заезда на АЗС;
 2) средняя доля быстрых заездов;
 3) средняя доля медленных заездов.

Распечатайте матрицу корреляции между этими величинами. Постройте диаграмму рассеяния попарно для всех величин методом scatter_matrix(). Задайте размер 9х9 дюймов.

	station_stat_multi = data.pivot_table(index='id', values=['time_spent', 'too_fast','too_slow'])
	print(station_stat_multi.corr())
	pd.plotting.scatter_matrix(station_stat_multi, figsize=(9, 9))	

***

##05 Как выжать максимум из очевидности

>Добавьте в таблицу `station_stat_multi` столбец `good_time_spent` из данных `good_stations_stat`

	station_stat_multi['good_time_spent'] = good_stations_stat['time_spent']
	print(station_stat_multi.corr())
	pd.plotting.scatter_matrix(station_stat_multi, figsize=(9, 9))	

***

##06 Заключение

***
